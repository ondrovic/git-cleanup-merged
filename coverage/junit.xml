<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="76" failures="0" errors="0" time="0.858">
  <testsuite name="GitCleanupTool" errors="0" failures="0" skipped="0" timestamp="2025-07-03T22:38:03" time="0.597" tests="52">
    <testcase classname="__tests__\index.test.js" name="should wait for specified milliseconds" time="0.004">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should actually use setTimeout" time="0.002">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should execute command successfully" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should execute command with silent option" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return null when command fails with silent option" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should throw error when command fails without silent option" time="0.019">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should check dependencies successfully" time="0.002">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should exit when not in git repository" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should exit when GitHub CLI is not installed" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should exit when GitHub CLI is not authenticated" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should get current branch successfully" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should exit when getting current branch fails" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should get local branches successfully" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should filter out main, master, and current branch" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return empty array when command fails" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle empty branch list" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should get PR status successfully" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return null when PR status check fails" time="0.003">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should check branches successfully" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle no branches to check" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle verbose mode" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle different PR statuses" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle unknown PR status" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should show unknown status in debug output when verbose" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should show &apos;unknown&apos; in debug output when prStatus is null and verbose" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should display results correctly" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle no branches to delete" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle dry run mode" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should delete branches when confirmed" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle failed branch deletions" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle cancellation" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return true for yes answers" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return true for YES answers" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should return false for no answers" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should display help information" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should parse dry-run flag" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should parse dry-run short flag" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should parse verbose flag" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should parse verbose short flag" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should show help and return undefined for help flag" time="0">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should show help and return undefined for help short flag" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should explicitly cover return for help" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should explicitly cover return for -h" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle unknown option" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should change directory if first argument is a directory" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should show error and exit if directory is invalid" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should not call process.chdir if no directory argument is given" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should run successfully" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should handle errors" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should display the directory being scanned (default)" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should display the directory being scanned (with directory argument)" time="0.001">
    </testcase>
    <testcase classname="__tests__\index.test.js" name="should not run when not main module" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Spinner class" errors="0" failures="0" skipped="0" timestamp="2025-07-03T22:38:03" time="0.079" tests="21">
    <testcase classname="__tests__\spinner.test.js" name="should create spinner with default message" time="0.003">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should create spinner with custom message" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should start spinning" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should not start if already spinning" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should set up interval with correct callback" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should cycle through frames" time="0.002">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinning when active" time="0.002">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should not stop if not spinning" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should update the message" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinner and log success message" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinner and log error message" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinner and log warning message" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinner and log info message" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should not log when verbose is false" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should stop spinner and log debug message when verbose is true" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should not log when verbose is undefined" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should log message without color" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should log message with color" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should handle start and stop cycle" time="0.001">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should handle multiple start calls" time="0">
    </testcase>
    <testcase classname="__tests__\spinner.test.js" name="should handle multiple stop calls" time="0">
    </testcase>
  </testsuite>
  <testsuite name="clearTerminal" errors="0" failures="0" skipped="0" timestamp="2025-07-03T22:38:04" time="0.055" tests="3">
    <testcase classname="__tests__\utils.test.js" name="should use cls command on win32 platform" time="0.001">
    </testcase>
    <testcase classname="__tests__\utils.test.js" name="should use escape codes on win32 when cls fails" time="0">
    </testcase>
    <testcase classname="__tests__\utils.test.js" name="should use escape codes on non-win32 platforms (e.g., linux)" time="0">
    </testcase>
  </testsuite>
</testsuites>